[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "fabric-workspace-deployment"
dynamic = ["version"]
description = ''
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
keywords = []
authors = [
  { name = "Raki Rahman", email = "mdrakiburrahman@gmail.com" },
]
dependencies = [
  "azure-identity===1.19.0",
  "dacite==1.9.2",
  "fabric-cicd==0.1.27",
  "pillow==11.3.0",
  "pyyaml==6.0.2",
  "requests==2.32.5"
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
[tool.hatch.envs.default]
type = "virtual"
path = ".venv"
installer = "uv"
dependencies = [
  "pyinstaller==6.14.1",
]

[project.scripts]
fabric-workspace-deployment = "fabric_workspace_deployment.main:main"

[project.urls]
Documentation = "https://github.com/mdrakiburrahman/fabric-workspace-deployment#readme"
Issues = "https://github.com/mdrakiburrahman/fabric-workspace-deployment/issues"
Source = "https://github.com/mdrakiburrahman/fabric-workspace-deployment"

[tool.hatch.version]
source = "code"
path = "src/fabric_workspace_deployment/__about__.py"

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/fabric_workspace_deployment tests}"

[tool.hatch.envs.build]
dependencies = [
  "pyinstaller>=6.0.0",
]
[tool.hatch.envs.build.scripts]
binary = "pyinstaller --onefile --name fabric-workspace-deployment src/fabric_workspace_deployment/main.py"
clean = "rm -rf build dist"

[tool.hatch.envs.publish]
dependencies = [
  "twine>=4.0.0",
  "keyring==25.6.0",
  "artifacts-keyring==1.0.0",
]
[tool.hatch.envs.publish.scripts]
build = "hatch build"
upload = "twine upload --repository monitoring dist/*"
release = [
  "hatch run build:clean",
  "build",
  "upload",
]

[tool.coverage.run]
source_pkgs = ["fabric_workspace_deployment", "tests"]
branch = true
parallel = true
omit = [
  "src/fabric_workspace_deployment/__about__.py",
]

[tool.coverage.paths]
fabric_workspace_deployment = ["src/fabric_workspace_deployment", "*/fabric-workspace-deployment/src/fabric_workspace_deployment"]
tests = ["tests", "*/fabric-workspace-deployment/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
